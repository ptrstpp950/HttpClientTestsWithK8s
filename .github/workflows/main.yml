# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY_NAME: httptest.azurecr.io
  REGISTRY_USERNAME: httptest
  APP_NAME: httpclienttests
#  CLUSTER_NAME: {cluster-name}
#  CLUSTER_RESOURCE_GROUP: {resource-group-name}
#  NAMESPACE: {namespace-name}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Connect to Azure Container registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}
          username: ${{ env.REGISTRY_USERNAME }} 
          password: ${{ secrets.REGISTRY_PASSWORD }}
    
      # Container build and push to a Azure Container registry (ACR)
      - run: |
          cd HttpClientTests
          docker buildx build . -t ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }}

      
